name: unittests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 4
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, pypy3]

    services:
      redis:
        image: redis
        ports:
        - 6379:6379
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up linux pip cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
    - name: Test with pytest
      run: |
        pip install pytest-cov
        pytest --cov=async_redis_objects --cov-report=xml

    - name: Check examples in readme
      shell: python
      run: |
        import re
        for fragment in re.findall('```python(.*?)```', open('readme.md').read(), re.DOTALL):
            exec(fragment)

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true
