name: unittests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 4
    strategy:
      matrix:
        python-container:
          - python:3.6-slim
          - python:3.7-slim
          - python:3.8-slim
          - pypy:3.6-slim

    container: ${{ matrix.python-container }}

    services:
      redis:
        image: redis
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v1

    - name: Set up linux pip cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-container }}-${{ hashFiles('**/setup.py') }}

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]

    - name: Test with pytest
      run: |
        pip install pytest-cov
        pytest --cov=async_redis_objects --cov-report=xml

    - name: Run examples in readme
      run: |-
        python <<'EOM'
        import re
        count = 0
        for fragment in re.findall('```python(.*?)```', open('readme.md').read(), re.DOTALL):
            count += 1
            exec(fragment)
        print("Ran", count, "examples from readme.md")
        'EOM'

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
