name: Tests

on:
  push:
  pull_request:
  schedule:
    - cron: "0 12 * * 1"

defaults:
  run:
    shell: bash

jobs:
  test:

    runs-on: ubuntu-latest
    timeout-minutes: 4
    strategy:
      fail-fast: false
      matrix:
        container:
          - python:3.6-slim
          - python:3.7-slim
          - python:3.8-slim
          - pypy:3.6-slim

    container: ${{ matrix.container }}

    services:
      redis:
        image: redis
        options: --entrypoint redis-server

    steps:
    - uses: actions/checkout@v1

    - name: Choose python command
      id: command
      run: |
        if [[ "${{ matrix.container }}" = pypy* ]] ;
        then
          echo "::set-output name=python::pypy3"
        else
          echo "::set-output name=python::python"
        fi

    - name: Install build dependencies
      run: |
        if [[ "${{ matrix.container }}" = pypy* ]] ;
        then
          apt-get update;
          apt-get install build-essential;
        else
          echo "ok"
        fi

    - name: Set up linux pip cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.container }}-${{ hashFiles('**/setup.py') }}

    - name: Install package
      run: |
        ${{ steps.command.outputs.python }} -m pip install --upgrade pip
        pip install -e .[test]

    - name: Test with pytest
      run: |
        pip install pytest-cov codecov
        pytest --cov=async_redis_objects --cov-report=xml

    - name: Run examples in readme
      run: |-
        ${{ steps.command.outputs.python }} <<'EOM'
        import re
        count = 0
        for fragment in re.findall('```python(.*?)```', open('readme.md').read(), re.DOTALL):
            count += 1
            exec(fragment)
        print("Ran", count, "examples from readme.md")
        'EOM'

    - name: Upload coverage
      run: codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
